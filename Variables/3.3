Aclaciones antes de ser colocado o publicado
1) cuando hay un parentesis "()" eso es del texto
2) para doble parentesis "(())" es para notas del posible gefe de esta entrega que es my lord señor Warlon :v
3) no use % porque me da pereza v:

3.3 Matrices y vectores genericos

3.3.1 Crear matrices
En la teoria podemos hacer una definición que una matriz es un arreglo rectangular de elementos 
(para saber algo de teoria de matrices, se recomeinda leer "algebra lineal" de Groosman)
((aunque recomiendo una bibliografia en este caso escojo el N°18))
aqui en Matlab se maneja mas que todo matrices, para crear una matriz se hace de la siguiente manera:
Se utiliza una variable, y lo escribimos tanto en el script o en el command window
x=["el argumento"]
el argumento puede ser una lista de números
por ejemplo:
X=[23]
(imagen mostrada desde el script)
(imagen mostrada lo que sale cuando en el command window)
Como vemos esto genera una matriz 1x1 con el numero 23.
es importantse el uso de corchetes, ya que si lo hacen con parentesis solo sera un número.
Para colocar mas números lo que hacemos es separar cada número con una coma o espacio
por ejemplo:
Y=[23,22] ó Y=[23 22]
(imagen mostrada desde el script)
(imagen mostrada lo que sale cuando en el command window)
Aquí vemos que nos genero una matriz 1x2.
si hay mas de un número y se usa el los parentesis conducira a un error.
(Se pide al lector que lo haga que verifique que pasa si utiliza los parentesis)
Podemos hacer colocar cuantos numeros se quiera
De hecho si hacemos z=[12,18,4,...,n] tendremos una matriz 1xn
(de aqui en adelante se utiliza la coma para separar las componentes, pero el lector puede hacer espacios si prefiere)
Para crear una matriz que tenga mas de una fila se utiliza ";"
Se usa el punto y coma entre filas.
A=[11,30;14,5]
Vemos que si hacemos esto, nos aparecera una matriz 2x2
el uso del punto y coma es obligatorio si se quiere tener mas filas
Si se quiere pensar como es la metologia de punto y coma aqui, 
puede pensar, que le decimos a la "maquina" que despues del punto y coma es otra columna.
A=[11,30;14,5;19,9]
Vemos que aqui ya es una matriz 3x2
de hecho si colocamos m-1 punto y coma, con n números entre los punto y coma; tenemos una matriz de mxn.
Precaución: en cada fila debe haber el mismo número de elementos, ya que producira error
por ejemplo:
B=[11,30;14,5;19]
(Se pide al lector que lo haga que verifique que pasa si utiliza los parentesis)
Si no hay un argumento la matriz generada es vacia.

3.3.2 Matrices con espaciado
Muchas veces queremos generar una matriz en la cual su siquiente elemento tenga cierta proporción.
Por ejemplo:
C=[1,2,3,4,5,6,7,8,9,10]
puede que esto sea facil, pero de pronto requeriremos en adelante mas numero y ya es molesto y hacemos esto hast 50 o 100 o 1'000.000
Con lo cual en vez de escribir todos esos números podemos utilizar el siguiente comando
D=1:10
(imagen mostrada desde el script)
(imagen mostrada lo que sale cuando en el command window)
Podemos mirar que aqui no se utilizo corchetes, pero se puede colocar (recomendamos al lector que lo haga siempre)
D=[1:10]
(imagen mostrada desde el script)
(imagen mostrada lo que sale cuando en el command window)
Aqui le decimos a la "maquina" que tome todos lo numeros del 1 al 10 con un espacio de unidad
si el espaciado no es una unidad toca especificarlo
Por ejemplo:
E=[1:1/2:5]
(imagen mostrada desde el script)
(imagen mostrada lo que sale cuando en el command window)
Observe que ya no muestra solo enteros, tambien fracciones, de los cuales su espaciado es 1/2
tambien se puede cambiar el numero el cual inicia y finaliza
F=[1/2:1/4:3/2]
Precaución: Si el numero que toma al iniciar es mayor que el final, nos diran que es vacio.
Hay otro codigo el cual es "linspace".
Por ejemplo:
G=linspace(1,10)
este codigo genera 100 números equidistantes de que estaran entre el 1 y el 10
(no se mostrara la imagen, por lo largo que es, pero se recomienda que el lector lo haga)
Muchas veces no necesitaremos 100 números, por lo cual se puede modificar:
Por ejemplo:
G=linscape(1,10,5)
El otro "parametro" es para saber cuandos numeros queremos que esten equidistantes de 1 a 10
(imagen mostrada desde el script)
(imagen mostrada lo que sale cuando en el command window)
De hecho hay la formula que utiliza este comando para saber cuanto es el espaciado:
linspace=(x1,x2,n)
espaciado=(x2-x1)/(n-1)

3.3.3 Matrices especificas
Hay matrices en la cuales matlab nos da mas facilidad de hacerlas y la cuales son importantes.
Hay una matriz en la cual todas sus componentes son ceros, el cual es la identidad de la suma de matrices.
En matlab hay un comando para crearla y es el siguiente "zeros".
H=Zeros(x1,x2)
Por ejemplo:
H=zeros(2,3)
(imagen mostrada desde el script)
(imagen mostrada lo que sale cuando en el command window)

Ejercicios
1) Que valor ó valores arroja A=[1/2:1/4:2/3] ,explique que pasa.
2) Genere una matriz vacia.
3) Genere una matriz con linspace, el cual genere solo numeros enteros.
4) sea A=([1 9],1,10) demostrar que hay un numero que se repite (se recomienda utilizar el principio del palomar)
